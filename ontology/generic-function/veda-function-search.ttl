@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix td: <http://semantic-machines.com/veda/test-data/> .

@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
<http://semantic-machines.com/veda/veda-function-search>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология функции 'Поиск' системы Веда"@ru ;
  rdfs:label "Veda system function 'Search' ontology"@en ;
#  owl:versionInfo "0.2" ;
  v-s:loadPriority 9 ;
.

########## SEARCH FUNCTION ###########

v-fs:fulltextQuery
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Запрос"@ru ;
  rdfs:label "Query"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:sortOrder
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Порядок сортировки"@ru ;
  rdfs:label "Sort order"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:EnterQuery
  rdf:type v-s:Bundle ;
  rdfs:label "Введите запрос"@ru ;
  rdfs:label "Enter query"@en ;
.
v-fs:Find
  rdf:type v-s:Bundle ;
  rdfs:label "Найти"@ru ;
  rdfs:label "Find"@en ;
.
v-fs:Excel
  rdf:type v-s:Bundle ;
  rdfs:label "Excel"@ru ;
  rdfs:label "Excel"@en ;
.
v-fs:FilesRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр с файлами"@ru ;
  rdfs:label "Registry with files"@en ;
.
v-fs:SetColumns
  rdf:type v-s:Bundle ;
  rdfs:label "Настроить столбцы"@ru ;
  rdfs:label "Set columns"@en ;
.
v-fs:Results
  rdf:type v-s:Bundle ;
  rdfs:label "Результаты"@ru ;
  rdfs:label "Results"@en ;
.
v-fs:Empty
  rdf:type v-s:Bundle ;
  rdfs:label "Пусто!"@ru ;
  rdfs:label "Empty!"@en ;
.
v-fs:NothingFound
  rdf:type v-s:Bundle ;
  rdfs:label "По Вашему запросу ничего не найдено. Пожалуйста, уточните запрос."@ru ;
  rdfs:label "Nothing found for your request. Please refine the query."@en ;
.
v-fs:MoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "Еще результаты"@ru ;
  rdfs:label "More results"@en ;
.
v-fs:AllResults
  rdf:type v-s:Bundle ;
  rdfs:label "Загрузить все"@ru ;
  rdfs:label "Load all"@en ;
.
v-fs:NoMoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "Все результаты загружены"@ru ;
  rdfs:label "All results loaded"@en ;
.

v-fs:AttributiveSearch
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Атрибутивный поиск"@ru ;
  rdfs:label "Attributive search"@en ;
  v-ui:hasTemplate v-fs:AttributiveSearchManagementTemplate ;
  v-ui:hasModel v-fs:AttributiveSearchModel ;
.

v-fs:applicableOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "Применимая операция"@ru ;
  rdfs:label "Applicable operation"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-s:Operation ;
.

v-fs:searchBlankTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон формы поиска"@ru ;
  rdfs:label "Search form template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchResultTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон результатов поиска"@ru ;
  rdfs:label "Search result template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchBlank
  rdf:type owl:ObjectProperty ;
  rdfs:label "Бланк поиска"@ru ;
  rdfs:label "Search blank"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-fc:Blank ;
.

v-fs:searchResult
  rdf:type owl:ObjectProperty ;
  rdfs:label "Результат"@ru ;
  rdfs:label "Result"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range rdfs:Resource ;
.
v-fs:searchOnLoad
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Искать сразу"@ru ;
  rdfs:label "Search on load"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:query
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Запрос"@ru ;
  rdfs:label "Query"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:loadAll
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Загрузить все"@ru ;
  rdfs:label "Load all"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:cursor
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Обработано"@ru ;
  rdfs:label "Processed"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:top
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Топ"@ru ;
  rdfs:label "Top"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:limit
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Ограничение"@ru ;
  rdfs:label "Limit"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:estimated
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Найдено"@ru ;
  rdfs:label "Estimated"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:authorized
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Авторизовано"@ru ;
  rdfs:label "Authorized"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.

v-fs:SearchBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Поиск"@ru ;
  rdfs:label "Search"@en ;
.

v-fs:CtrlEnterBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Нажмите 'Ctrl + Enter' чтобы начать поиск"@ru ;
  rdfs:label "Press 'Ctrl + Enter' to begin search"@en ;
.

v-fs:ClickToViewContent
  rdf:type v-s:Bundle ;
  rdfs:label "Кликните, чтобы увидеть всё содержимое"@ru ;
  rdfs:label "Click to view all contents"@en ;
.

v-fs:AttributiveSearchModel
  rdf:type v-ui:ClassModel ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-s:script """
  var self = this;

  // Defaults
  this["v-fs:cursor"] = [ this["v-fs:cursor"][0] || 0 ];
  this["v-fs:top"] = [ veda.user.displayedElements || 10 ];
  this["v-fs:limit"] = [ this["v-fs:limit"][0] || 10000 ];
  this["v-fs:estimated"] = [ this["v-fs:estimated"][0] || 0 ];
  this["v-fs:authorized"] = [ this["v-fs:authorized"][0] || 0 ];
  this["v-fs:sortOrder"] = [ this["v-fs:sortOrder"][0] || "'v-s:created' desc" ];

  // Search method
  this.search = function (cursor) {

    if (cursor > 0) {
      self["v-fs:cursor"] = [cursor];
    } else {
      self["v-fs:cursor"] = [0];
      self["v-fs:authorized"] = [0];
      self["v-fs:searchResult"] = [];
    }
    var sort = self.hasValue("v-fs:sortOrder") ? self["v-fs:sortOrder"][0] : undefined;
    var queryString = [];
    if ( self.hasValue("v-fs:searchBlank") ) {
      self["v-fs:searchBlank"][0].initBlank();
      queryString.push( veda.Util.queryFromIndividual(self["v-fs:searchBlank"][0].object) );
    }
    if ( self.hasValue("v-fs:fulltextQuery") ) {
      queryString.push( self["v-fs:fulltextQuery"][0] )
    }
    queryString = queryString.join(" && ");
    self["v-fs:query"] = [ queryString ];
    if ( queryString ) {
      return query({
        ticket: veda.ticket,
        query: queryString,
        sort: self["v-fs:sortOrder"][0],
        top: self["v-fs:top"][0] || veda.user.displayedElements || 10,
        limit: self["v-fs:limit"][0] || 10000,
        from: self["v-fs:cursor"][0],
        async: true
      }).then(function (results) {
        self["v-fs:estimated"] = [ results.estimated ];
        self["v-fs:cursor"] = [ results.cursor ];
        return results.result;
      }).then(function (resultDelta) {

        var prefetch = [];
        resultDelta.map(function (uri) {
          if ( !veda.cache.get(uri) ) {
            prefetch.push( uri );
          }
        });
        if (prefetch.length) {
          return get_individuals({
            ticket: veda.ticket,
            uris: prefetch,
            async: true
          }).then(function (prefetched) {
            prefetched.forEach(function (json) {
              var fetched = new veda.IndividualModel(json);
            });
            return resultDelta;
          });
        } else {
          return resultDelta;
        }
      }).then(function (resultDelta) {
        self["v-fs:authorized"] = [ self["v-fs:authorized"][0] + resultDelta.length ];
        var delta = resultDelta.map(function (uri) {
          return new veda.IndividualModel(uri);
        });
        self.addValue("v-fs:searchResult", delta);
        if ( self.hasValue("v-fs:loadAll", true) && self["v-fs:cursor"][0] < self["v-fs:estimated"][0] ) {
          return self.search( self["v-fs:cursor"][0] );
        }

        // Notify search blank on search complete
        if ( self.hasValue("v-fs:searchBlank") ) {
          self["v-fs:searchBlank"][0].initBlank();
          self["v-fs:searchBlank"][0].object.trigger("search:complete");
        }

        return self.hasValue("v-fs:loadAll", true) ? self["v-fs:searchResult"] : delta ;
      });
    } else {
      return Promise.resolve( self["v-fs:searchResult"] );
    }
  };

//# sourceURL=v-fs:AttributiveSearchModel
  """ ;
.

v-fs:EnterLabel
  rdf:type v-s:Bundle ;
  rdfs:label "Введите название"@ru ;
  rdfs:label "Enter label"@en ;
.

v-fs:SavePersonalRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Сохранить личный реестр"@ru ;
  rdfs:label "Save personal registry"@en ;
.

v-fs:UpdatePersonalRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Обновить личный реестр"@ru ;
  rdfs:label "Update personal registry"@en ;
.

v-fs:RegistrySuccessfullySaved
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр успешно сохранен"@ru ;
  rdfs:label "Registry successfully saved"@en ;
.

v-fs:RegistrySuccessfullyUpdated
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр успешно обновлен"@ru ;
  rdfs:label "Registry successfully updated"@en ;
.

v-fs:AttributiveSearchManagementTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var notify = new veda.Notify();

  if ( !individual.hasValue("v-s:creator", veda.appointment || veda.user) ) {
    $(".action.save-registry", template).click(function () {
      var personalLabel = prompt( new veda.IndividualModel("v-fs:EnterLabel").toString(), individual.toString() );
      var personalRegistry = individual.clone();
      personalRegistry["v-fs:searchResult"] = [];
      personalRegistry["v-fs:authorized"] = [];
      personalRegistry["v-fs:cursor"] = [];
      personalRegistry["v-fs:estimated"] = [];
      personalRegistry["v-fs:limit"] = [];
      personalRegistry["v-fs:top"] = [];
      personalRegistry["v-s:creator"] = [];
      personalRegistry["v-s:created"] = [];
      personalRegistry["rdfs:isDefinedBy"] = [];
      personalRegistry["rdfs:label"] = [ personalLabel ];
      var searchBlank = individual.hasValue("v-fs:searchBlank") ? individual["v-fs:searchBlank"][0] : undefined;
      if (searchBlank && searchBlank.object) {
        var personalRegistryBlank = searchBlank.clone();
        personalRegistry["rdfs:isDefinedBy"] = [];
        personalRegistry["v-fs:searchBlank"] = [ personalRegistryBlank ];
        personalRegistryBlank.object = searchBlank.object;
        personalRegistryBlank.updateBlank();
        personalRegistryBlank.save();
      }
      personalRegistry.save();
      var aspect = veda.user.aspect;
      aspect.addValue("v-s:hasRegistry", personalRegistry);
      aspect.save();
      notify("success", { message: new veda.IndividualModel("v-fs:RegistrySuccessfullySaved").toString() });
    });
  } else {
    $(".action.save-registry", template).remove();
  }

  if ( individual.rights.hasValue("v-s:canUpdate", true) ) {
    $(".action.update-registry", template).click(function () {
      individual["v-fs:searchResult"] = [];
      var searchBlank = individual.hasValue("v-fs:searchBlank") ? individual["v-fs:searchBlank"][0] : undefined;
      if (searchBlank && searchBlank.object) {
        searchBlank.updateBlank();
        searchBlank.save();
      }
      notify("success", { message: new veda.IndividualModel("v-fs:RegistrySuccessfullyUpdated").toString() });
    });
  } else {
    $(".action.update-registry", template).remove();
  }
  if ( individual.rights.hasValue("v-s:canDelete", true) ) {
    $(".action.delete-registry", template).click(function () {
      template.trigger("delete");
    });
  } else {
    $(".action.delete-registry", template).remove();
  }

//# sourceURL=v-fs:AttributiveSearchManagementTemplate_pre
</script>
<div>
  <div class="container sheet">
    <div class="ribbon-wrapper top-left">
      <div class="ribbon top-left primary" about="v-fs:SearchBundle" property="rdfs:label"></div>
    </div>
    <div class="actions text-right">
      <button class="action save-registry btn btn-success" about="v-fs:SavePersonalRegistry" property="rdfs:label"></button>
      <button class="action update-registry btn btn-success" about="v-fs:UpdatePersonalRegistry" property="rdfs:label"></button>
      <button class="action delete-registry btn btn-link" about="v-s:Delete" property="rdfs:label"></button>
    </div>
  </div>
  <div class="margin-lg" about="@" data-template="v-fs:AttributiveSearchTemplate">
</div>
  """ ;
.

v-fs:AttributiveSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<div class="container sheet">
  <style>
    td.number {
      mso-number-format:General;
    }
    td.date {
      mso-number-format:"Short Date";
    }
  </style>
  <div about="@" data-template="v-fs:AttributiveSearchInlineTemplate"></div>
  <span class="additional-actions">
    <button class="btn btn-default xls"><span about="v-fs:Excel" property="rdfs:label"></span></button>
    <button class="btn btn-default files"><span about="v-fs:FilesRegistry" property="rdfs:label"></span></button>
    <span class="text-muted padding-lg" about="v-fs:CtrlEnterBundle" property="rdfs:label"></span>
  </span>
</div>
<script>
  // Append additional actions
  setTimeout(function () {
    var additionalActions = $(".additional-actions", template);
    var searchActions = $(".search-actions", template);
    additionalActions.appendTo(searchActions);
  }, 0);

  // Export table to 'blob' or 'xls'
  var exportTable = (function () {
    var uri = 'data:application/vnd.ms-excel;base64,'
      , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
      , format = function(s, c) { return s.replace(/{([a-z]+)}/g, function(m, p) { return c[p]; }) }
    return function(table, name, exportAs) {
      if (!table.nodeType) table = document.getElementById(table);
      var ctx = {
        worksheet: name || 'Worksheet',
        table: table.innerHTML
      };
      if ( exportAs === "xls" ) {
        // Tags
        var tags = new RegExp("<\/?(a|span|p|div|button) ?.*?>", "gi");
        // Numbers with decimal point
        var decimal = new RegExp("([^\\d\\.\\:]+\\d+)\\.(\\d+[^\\d\\.\\:]+)", "gi");
        ctx.table = ctx.table.replace(tags, " ").replace(decimal, "$1,$2");
      }
      var formatted = format(template, ctx);
      var blob = new Blob([formatted], {type: "application/vnd.ms-excel;charset=utf-8"});
      if ( exportAs === "blob" ) {
        return blob;
      } else if ( exportAs === "xls" ) {
        saveAs(blob, name + ".xls");
      }
    }
  })();

  $(".xls", template).click(function (e) {
    e.preventDefault();
    var resultTable = $(".search-result table").clone();
    resultTable.find(".hidden").remove();
    resultTable = resultTable.get(0);
    exportTable(resultTable, individual["rdfs:label"].join(", "), "xls");
  });

  $(".files", template).click(function (e) {
    var btn = $(this);
    toggleSpin(btn);
    e.preventDefault();
    var resultTable = $(".search-result table").clone();
    resultTable.find(".hidden").remove();
    resultTable = resultTable.get(0);

    var filesPromises = $("[typeof='v-s:File']", resultTable).map(function () {
      var $this = $(this);
      var fileUri = $this.attr("resource").replace(":", "_");
      var fileName = $("span", $this).text().replace(/([a-zA-Z0-9]+)$/, fileUri + ".$1");
      var localFileUrl = "./files/" + fileName;
      var link = $("a", $this);
      var fileUrl = link.attr("href");
      link.attr("href", localFileUrl);
      return filePromise(fileUrl, fileName);
    });

    Promise.all(filesPromises).then(function (files) {
      var zip = new JSZip();
      var registry = exportTable(resultTable, individual["rdfs:label"].join(", "), "blob");
      zip.file("registry.html", registry);
      var folder = zip.folder("files");
      files.forEach(function (file) {
        folder.file(file.name, file);
      });
      zip.generateAsync({type:"blob"}).then(function(content) {
        saveAs(content, "registry.zip");
        toggleSpin(btn);
      });
    }).catch(function (error) {
      console.log(error, error.stack);
      toggleSpin(btn);
      var notify = new veda.Notify();
      notify("danger", { message: "Ошибка выгрузки реестра. Обратитесь в поддержку." });
    });
  });

  function filePromise(url, name) {
    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url + "?" + Math.random(), true);
      xhr.responseType = 'blob';
      xhr.onload = function(e) {
        if (this.status == 200) {
          var file = new Blob([this.response], {type: 'application/octet-stream'});
          file.name = name;
          resolve(file);
        } else {
          reject(xhr.statusText);
        }
      };
      xhr.onerror = function () {
        reject(xhr.statusText);
      }
      xhr.send();
    });
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  //# sourceURL=v-fs:AttributiveSearchTemplate_post
</script>
  """ ;
.

v-fs:PerformOperation
  rdf:type v-s:Bundle ;
  rdfs:label "Выполнить операцию"@ru ;
  rdfs:label "Perform operation"@en ;
.

v-fs:SelectedResultsActionsTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var self = this;
  function selectedHandler() {
    var selectedL = self.selected && Object.keys(self.selected).length || 0;
    if (!selectedL) {
      template.addClass("hidden");
    } else {
      template.removeClass("hidden");
    }
  }
  self.on("selected", selectedHandler);
  template.one("remove", function () {
    self.off("selected", selectedHandler);
  });
  selectedHandler();

  $(".dropdown-toggle", template).one("click", function () {
    var dropdown = $(".dropdown-menu", template);
    var operationTemplate = "<li><a about='@' href='#' property='rdfs:label'></a></li>"
    function renderOperation(operation) {
      var renderedOperation = operation.present(dropdown, operationTemplate);
      if ( !operation.rights.hasValue("v-s:canCreate", true) ) {
        renderedOperation.addClass("disabled");
      }
    }
    var applicableOperations = self["v-fs:applicableOperation"];
    applicableOperations.forEach(renderOperation);
    query({
      ticket: veda.ticket,
      query: "'rdf:type' === 'owl:Class' && 'rdfs:subClassOf' === 'v-s:GenericOperation'",
      async: true
    }).then(function (response) {
      if ( dropdown.children().length && response.result.length ) {
        dropdown.append("<li role='separator' class='divider'></li>");
      }
      return response.result.map(function (operation_uri) {
        var operation = new veda.IndividualModel(operation_uri);
        renderOperation(operation);
      });
    });
  });

  $(".dropdown-menu", template).on("click", "[resource]", function (e) {
    e.preventDefault();
    var $this = $(this);
    if ( $this.hasClass("disabled") ) { return; }
    var operationClassUri = $this.attr("resource"),
        operationClass = new veda.IndividualModel(operationClassUri),
        operation = new veda.IndividualModel(),
        operationContainer = $(".operation-container", template).empty();
    operation["rdf:type"] = [ operationClass ];
    //operation["v-s:dataQuery"] = self["v-fs:query"];
    operation["v-s:data"] = Object.keys(self.selected).map(function (value_uri) {
      return new veda.IndividualModel(value_uri);
    });
    var modal = veda.Util.showSmallModal(operation);
    modal.on("click", ".action#start", function () {
      if (self.operation !== operation) {
        self.operation = operation;
        operationContainer.empty();
        operation.present(operationContainer, "v-s:OperationStatusTemplate");
      }
      modal.on("hidden.bs.modal", function () {
        modal.modal("hide").remove();
      });
    });
  });
//# sourceURL=v-fs:SelectedResultsActionsTemplate_pre
</script>
<div class="btn-group">
  <button type="button" class="btn btn-xs btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    <span about="v-fs:PerformOperation" property="rdfs:label"></span> <span class="caret"></span>
  </button>
  <ul class="dropdown-menu operations"></ul>
  <div class="pull-left operation-container margin-md-h"></div>
</div>
<script>
  if (this.operation) {
    var operationContainer = $(".operation-container", template);
    this.operation.present(operationContainer, "v-s:OperationStatusTemplate");
  }
//# sourceURL=v-fs:SelectedResultsActionsTemplate_post
</script>
  """ ;
.

v-fs:AttributiveSearchInlineTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var self = individual,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined,
      searchResultTemplate = self.hasValue("v-fs:searchResultTemplate") ? self["v-fs:searchResultTemplate"][0]["v-ui:template"][0].toString() : undefined,
      searchResultContainer = $(".search-result", template);
  if ( searchResultTemplate ) {
    searchResultContainer.append( searchResultTemplate );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  } else {
    $(".stats-top, .stats-bottom, .result-heading", template).remove();
    searchResultTemplate = (new veda.IndividualModel("v-fs:MinimalSearchResultTemplate"))["v-ui:template"][0].toString();
    searchResultContainer.append( searchResultTemplate );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  }

  if ( !searchBlankTemplate ) {
    $(".results-load-buttons", template).detach().appendTo(template);
    $(".params", template).remove();
  }
  if ( this.hasValue("v-fs:loadAll", true) ) {
    $(".no-more-results", template).remove();
  }

  // Enable swipe for result table
  $("body").keydown(enableSwipe).keyup(disableSwipe);
  template.one("remove", function () {
    $("body").off("keydown", enableSwipe).off("keyup", disableSwipe);
  });
  function disableSwipe (e) {
    if (e.which === 17) {
      $(".search-result", template).addClass("noSwipe").removeClass("swipe");
    }
  }
  function enableSwipe (e) {
    if (e.ctrlKey) {
      $(".search-result", template).addClass("swipe").removeClass("noSwipe");
    }
  }

  var prevDistance = 0, delta = 0;
  $(".search-result", template).swipe({
    swipeStatus: function (event, phase, direction, distance, duration) {
      if (phase === "move" && event.ctrlKey === true) {
        this.css("cursor", "move");
        if (direction === "left") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() + delta );
        } else if (direction === "right") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() - delta );
        } else if (direction === "up") {
          window.scrollBy(0, distance);
        } else if (direction === "down") {
          window.scrollBy(0, -distance);
        }
      } else {
        prevDistance = 0;
        delta = 0;
        this.css("cursor", "");
      }
    }
  });
  template.one("remove", function () {
    prevDistance = null;
    delta = null;
    $(".search-result", template).swipe("destroy");
  });

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_pre
</script>
<div>
  <style>
    .swipe {
      cursor: move;
    }
    .td-wrapper {
      max-height: 100px;
      overflow: hidden;
      display: inline-block;
      position: relative;
    }
    .td-wrapper::after {
      content: "";
      position: absolute;
      bottom: 0;
      right: 0;
      z-index: 2;
      border-top: 0 solid transparent;
      border-right: 0 solid transparent;
      border-bottom: 7px solid gray;
      border-left: 7px solid transparent;
    }
  </style>
  <div class="params">
    <div class="search-form"></div>
    <br>
    <div class="search-actions clearfix">
      <button class="btn btn-primary search-button" id="search-button" about="v-fs:Find" property="rdfs:label"></button>
      <span class="results-load-buttons">
        <button class="more-results btn btn-primary hidden" about="v-fs:MoreResults" property="rdfs:label"></button>
        <button class="all-results btn btn-warning hidden" about="v-fs:AllResults" property="rdfs:label"></button>
      </span>
      <div class="pull-right btn-group dropup set-columns-wrapper" style="margin-left:3px;">
        <button type="button" class="btn btn-info dropdown-toggle set-columns" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <span about="v-fs:SetColumns" property="rdfs:label"></span>
          <span class="caret"></span>
        </button>
        <div class="dropdown-menu" style="padding:15px; width: 300px; max-height: 500px; overflow-y: auto;">
          <div class="checkbox">
            <label>
              <input class="column-check" type="checkbox" checked="true"> <span class="column-name"></span>
            </label>
          </div>
        </div>
      </div>
    </div>
    <br>
  </div>
  <div class="results hidden">
    <div class="result-heading">
      <h4 class="clearfix">
        <span class="pull-left" about="v-fs:Results" property="rdfs:label"></span>
        <div class="pull-left margin-md-h" about="@" data-template="v-fs:SelectedResultsActionsTemplate"></div>
        <small class="stats-top pull-right" style="color:black">
          <span about="v-fs:estimated" property="rdfs:label"></span>
          <span about="@" property="v-fs:estimated" class="badge"></span>&nbsp;&nbsp;
          <span about="v-fs:cursor" property="rdfs:label"></span>
          <span about="@" property="v-fs:cursor" class="badge"></span>&nbsp;&nbsp;
          <strong about="v-fs:authorized" property="rdfs:label"></strong>
          <span about="@" property="v-fs:authorized" class="badge"></span>&nbsp;&nbsp;
        </small>
      </h4>
    </div>
    <div class="search-result table-responsive noSwipe"></div>
    <div class="not-found alert alert-warning hidden">
      <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
    </div>
    <div class="no-more-results alert alert-success hidden">
      <strong about="v-fs:NoMoreResults" property="rdfs:label"></strong>
    </div>
  </div>
</div>
<script>
  // Make position fixed for buttons bar that doesn't fit the window
  function checkOffset(main, actions, actionsStaticHeight, placeholder) {
    var mainTop = main.offset().top;
    var mainHeight = main.height();
    var windowHeight = window.innerHeight;
    var windowTop = window.scrollY || window.pageYOffset;
    var actionsStaticTop = placeholder.offset().top;
    var actions_inside_viewport = windowTop <= actionsStaticTop && actionsStaticTop < (windowTop + windowHeight);
    var main_inside_viewport = windowTop <= (mainTop + mainHeight - actionsStaticHeight) && (mainTop + actionsStaticHeight) < (windowTop + windowHeight);
    if ( !actions_inside_viewport && main_inside_viewport )  {
      if ( !actions.hasClass("actions-fixed") ) {
        placeholder.css("height", actionsStaticHeight);
        actions.find("br").addClass("hidden");
        actions.addClass("actions-fixed");
      }
    } else {
      if ( actions.hasClass("actions-fixed") ) {
        placeholder.css("height", 0);
        actions.find("br").removeClass("hidden");
        actions.removeClass("actions-fixed");
      }
    }
  }
  setTimeout(function () {
    var main = template;
    var actions = $(".search-actions", template);
    if (!actions.length) { return; }
    var actionsStaticHeight = actions.height();
    var placeholder = $("<div></div>").insertBefore(actions);
    checkOffset(main, actions, actionsStaticHeight, placeholder);
    $(window).on("scroll", scrollHandler);
    template.one("remove", function () {
      $(window).off("scroll", scrollHandler);
    });
    function scrollHandler () {
      checkOffset(main, actions, actionsStaticHeight, placeholder);
    }
  }, 500);

  var self = individual,
      searchBlankContainer = $(".search-form", template),
      searchResultContainer = $(".search-result", template),
      searchButton = $("#search-button.search-button", template),
      moreResults = $(".more-results", template),
      allResults = $(".all-results", template),
      noMoreResults = $(".no-more-results", template),
      searchBlank = self.hasValue("v-fs:searchBlank") ? self["v-fs:searchBlank"][0] : undefined ,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined ,
      resultContainer = $(".result-container", template),
      notFound = $(".not-found", template),
      statsTop = $(".stats-top", template);

  // Set columns
  var resultContainer = $(".result-container", template);
  individual.hiddenColumns = individual.hiddenColumns || {};
  var checksContainer = $(".set-columns-wrapper .dropdown-menu", template).on('click', function (e) {
    e.stopPropagation();
  });
  var checkTmpl = $(".set-columns-wrapper .dropdown-menu .checkbox", template).remove();
  if (checkTmpl.length) {
    checkTmpl = checkTmpl.get(0).outerHTML;
    $(".search-result table > thead > tr:last > th", template).each(function (index) {
      var th = $(this);
      var check = $(checkTmpl);
      var checkbox = $("input", check);
      var columnName = $(this).find("span").clone();
      if ( columnName.length ) {
        $(".column-name", check).html( columnName );
      } else {
        $(".column-name", check).text( th.text() );
      }
      if (index in individual.hiddenColumns) {
        checkbox.prop("checked", false);
      } else {
        checkbox.prop("checked", true);
      }
      checkbox.change(checkHandler);
      checkHandler.call( checkbox.get(0) );
      checksContainer.append(check);

      // Show/hide result table columns & update resultTemplate accordingly
      function checkHandler() {
        individual.resultTemplate = $(individual.resultTemplate);
        if ( $(this).is(":checked") ) {
          th.removeClass("hidden");
          $("tr td:nth-child(" + (index + 1) + ")", resultContainer).removeClass("hidden");
          individual.resultTemplate.not("script").children().eq(index).removeClass("hidden");
          delete individual.hiddenColumns[index];
        } else {
          th.addClass("hidden");
          $("tr td:nth-child(" + (index + 1) + ")", resultContainer).addClass("hidden");
          individual.resultTemplate.not("script").children().eq(index).addClass("hidden");
          individual.hiddenColumns[index] = true;
        }
        individual.resultTemplate = individual.resultTemplate.map(function () { return this.outerHTML; }).get().join("");
      }
    });
  }

  // Read extra parameters from URL
  var hash = window.location.hash;
  var tokens = decodeURI(hash).slice(2).split("/"),
      uri = tokens[0],
      extra = tokens[4];
  if (uri === self.id) {
    if (extra) {
      extra = extra.split("&").reduce(function (acc, pair) {
        var split = pair.split("="),
            property_uri = split[0] || "",
            value = split[1] || "";
        acc[property_uri] = acc[name] || [];
        acc[property_uri].push( parse(property_uri, value) );
        return acc;
      }, {});
    }
  }
  function parse (property_uri, value) {
    var property = new veda.IndividualModel(property_uri);
    var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : "rdfs:Resource";
    var parsed;
    switch (range) {
      case "xsd:string": parsed = value; break;
      case "xsd:integer":
      case "xsd:decimal": parsed = parseFloat( value.split(" ").join("").split(",").join(".") ); break;
      case "xsd:boolean": parsed = value === "true"; break;
      case "xsd:dateTime": parsed = new Date(value); break;
      default: parsed = new veda.IndividualModel(value);
    }
    return parsed;
  }

  // Render search form
  if ( searchBlank ) {
    searchBlank.initBlank();
    searchBlank.object.on("search", formHandler);
    template.one("remove", function () {
      searchBlank.object.off("search", formHandler);
    });
    if ( searchBlankTemplate && searchBlankContainer.length ) {
      searchBlank.object.present(searchBlankContainer, searchBlankTemplate, "search");
    }
    // Populate blank with extra parameters from URL
    if (extra) {
      for (var property_uri in extra) {
        searchBlank.object[property_uri] = extra[property_uri];
      }
    }
  } else {
    $(".params", template).remove();
  }
  function formHandler () {
    self.search()
      .then(renderResult)
      .then(clearSelected)
      .then(function () {
        scrollTo(self.scroll);
      });
  }

  // Remember scroll position
  template.one("remove", function () {
    self.scroll = $(window).scrollTop();
  });

  // Scroll to position
  function scrollTo(position) {
    $("html, body").animate({
      scrollTop: position
    });
  }

  // Search handler
  function searchHandler() {
    var searchButtons = $(".search-button", template);
    toggleSpin(searchButtons);
    self.search()
      .then(renderResult)
      .then(clearSelected)
      .then(function () {
        if ( location.hash.indexOf(individual.id) >= 0 ) {
          scrollTo(self.scroll);
        }
        toggleSpin(searchButtons);
      })
      .catch(function (error) {
        console.log(error);
        toggleSpin(searchButtons);
      });
  }

  // Search button handler
  searchButton.click(searchHandler);

  // Ctrl + Enter triggers search
  function ctrlEnterHandler (e) {
    if (e.ctrlKey && e.keyCode === 13) {
      searchHandler.call( searchButton.get(0) );
    }
  }
  $(window).on("keyup", ctrlEnterHandler);
  template.one("remove", function () {
    $(window).off("keyup", ctrlEnterHandler);
  });

  // More results handler
  function moreResultsHandler() {
    return self.search( self["v-fs:cursor"][0] )
      .then(renderResult)
      .then(setToggleSelectAll)
      .catch(function (error) {
        console.log(error);
      });
  }

  // More results button
  moreResults.click(moreResultsHandler);

  // All results button
  allResults.click(function () {
    var warn = new veda.IndividualModel("v-s:AreYouSure")["rdfs:label"].join(" ");
    if ( self["v-fs:estimated"][0] - self["v-fs:cursor"][0] < 100 || confirm(warn) ) {
      loadAll();
    }
  });
  function loadAll() {
    if (self["v-fs:cursor"][0] < self["v-fs:estimated"][0] && template.is(":visible")) {
      moreResultsHandler().then(loadAll);
    }
  }

  // Double click on result table row routes to search result
  $(".search-result", template).on("dblclick", "table tbody tr", function () {
    var uri = $(this).attr("resource");
    riot.route("#/" + uri);
  });
  // Mark clicked row
  $(".search-result", template).on("click", "table tbody tr", function () {
    var that = $(this);
    that.addClass("warning").siblings(".warning").removeClass("warning");
    self.marked = that.index();
  });

  // Manage sort
  var sortBy = "", dir = "";
  var tmp = self["v-fs:sortOrder"][0].split(" ");
  sortBy = tmp[0]; dir = tmp[1];
  $(".orderby", template).each( function () {
    var header = $(this);
    var a = $("<a href='#' class='text-muted glyphicon glyphicon-sort-by-attributes'></a>");
    header.prepend(a, " ");
    var property_uri = header.attr("data-orderby");
    if (sortBy.indexOf(property_uri) >= 0) {
      a.removeClass("text-muted");
      if (dir === "desc") { a.removeClass("glyphicon-sort-by-attributes").addClass("glyphicon-sort-by-attributes-alt"); }
    }
    a.click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      $(".orderby a", template).addClass("text-muted");
      var dir = $this.hasClass("glyphicon-sort-by-attributes-alt") ? " asc" : " desc";
      $this.removeClass("text-muted").toggleClass("glyphicon-sort-by-attributes glyphicon-sort-by-attributes-alt");
      self["v-fs:sortOrder"] = [ "'" + property_uri + "'" + dir + " , " + "'" + property_uri + "_" + Object.keys(veda.user.language)[0].toLowerCase() + "'" + dir ];
      searchHandler.call(this);
    });
  });

  // Select results
  self.selected = self.selected || {};
  var toggleSelectAll = searchResultContainer.find(".toggle-select-all");
  searchResultContainer.on("click", ".toggle-select", toggleSelect);

  toggleSelectAll.click(function () {
    var selectedL = Object.keys(self.selected).length;
    var resultsL = resultContainer.children().length;
    if ( resultsL !== 0 && selectedL !== 0 && (resultsL !== selectedL || resultsL === selectedL) ) {
      clearSelected();
    } else if ( resultsL !== 0 && selectedL === 0) {
      selectAll();
    }
    setToggleSelectAll();
  });
  function setToggleSelectAll() {
    var selectedL = Object.keys(self.selected).length;
    var resultsL = resultContainer.children().length;
    if ( resultsL !== 0 && resultsL === selectedL ) {
      toggleSelectAll.prop("checked", true);
      toggleSelectAll.prop("indeterminate", false);
    } else if ( resultsL !== 0 && selectedL !== 0 && resultsL !== selectedL ) {
      toggleSelectAll.prop("indeterminate", true);
    } else if ( selectedL === 0 ) {
      toggleSelectAll.prop("indeterminate", false);
      toggleSelectAll.prop("checked", false);
    }
    self.trigger("selected");
  }
  function clearSelected() {
    self.selected = {};
    searchResultContainer.find(".toggle-select:checked").prop("checked", false);
    setToggleSelectAll();
  }
  function selectAll() {
    self.selected = {};
    searchResultContainer.find(".toggle-select")
      .prop("checked", true)
      .each(function () {
        var result_uri = $(this).closest("[resource]").attr("resource");
        self.selected[result_uri] = true;
      });
  }
  function toggleSelect() {
    var $this = $(this);
    var result_uri = $this.closest("[resource]").attr("resource");
    if ( $this.is(":checked") ) {
      self.selected[result_uri] = true;
    } else {
      delete self.selected[result_uri];
    }
    setToggleSelectAll()
  }

  // Render result
  function renderResult(resultDelta) {

    $(".results", template).removeClass("hidden");

    // Toggle "more results" button & "no more results" alert
    if ( self["v-fs:cursor"][0] === self["v-fs:estimated"][0] ) {
      moreResults.addClass("hidden");
      allResults.addClass("hidden");
      noMoreResults.removeClass("hidden");
    } else {
      moreResults.removeClass("hidden");
      allResults.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }
    // Toggle "not found" alert & "no more results" alert
    if ( resultDelta.length ) {
      notFound.addClass("hidden");
    } else {
      notFound.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }

    // Render each result
    var total = self["v-fs:authorized"][0];
    var delta = resultDelta.length;

    // New search triggered
    if ( total === delta ) {
      resultContainer.empty();
    }
    return resultDelta.map(function (result, i) {
      var tmpl = result.present(resultContainer, individual.resultTemplate);
      var serialNumber = total - delta + i + 1;
      $(".serial-number", tmpl).text(serialNumber);
      if (serialNumber === self.marked + 1) {
        tmpl.addClass("warning");
      }
      tmpl.find(".toggle-select").prop("checked", self.selected[result.id] ? true : false);

      setTimeout(function () {
        $("td", tmpl).each( function () {
          var text = this.innerText || this.textContent;
          if (text && text.length > 100) {
            var $this = $(this);
            var contents = $this.contents();
            var wrapper = $("<div class='td-wrapper'></div>").append(contents);
            $this.empty().append(wrapper);
            wrapper.popover({
              content: wrapper.html(),
              html: true,
              placement: "top"
            }).tooltip({
              title: new veda.IndividualModel("v-fs:ClickToViewContent")["rdfs:label"].join(" "),
              placement: "bottom",
              delay: { show: 750, hide: 0 }
            });
          }
        });
      }, 300);
      return tmpl;
    });
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  // Show results on load if they are available (e.g. if we came back)
  if ( self.hasValue("v-fs:searchResult") ) {
    renderResult( self["v-fs:searchResult"] );
    setToggleSelectAll();
    if ( location.hash.indexOf(individual.id) >= 0 ) {
      scrollTo(self.scroll);
    }
  // Search on load
  } else if ( individual.hasValue("v-fs:searchOnLoad", true) ) {
    self.search()
      .then(renderResult)
      .then(clearSelected)
      .then(function () {
        if ( location.hash.indexOf(individual.id) >= 0 ) {
          scrollTo(self.scroll);
        }
      });
  }

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_post
</script>
  """ ;
.

### INDIVIDUALS ###

v-fs:FulltextSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Полнотекстовый поиск"@ru ;
  rdfs:label "Fulltext search"@en ;
  v-fs:searchBlank v-fs:FulltextBlank ;
  v-fs:searchBlankTemplate v-fs:FulltextBlankTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
.

v-fs:FulltextBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType v-s:UserThing ;
.

v-fs:AdvancedSearchBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Расширенный поиск"@ru ;
  rdfs:label "Advanced search"@en ;
.

v-fs:FulltextBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search blank template"@en ;
  v-ui:template """
<div class="row">
  <style>
    .input-group input {
      border-top-left-radius: 4px!important;
      border-bottom-left-radius: 4px!important;
    }
  </style>
  <div class="col-md-12">
    <h2 about="v-fs:EnterQuery" property="rdfs:label"></h2>
    <div class="input-group">
      <veda-control property="*" data-type="string"></veda-control>
      <span class="input-group-btn">
        <button class="btn btn-primary search-button" id="custom-search-button" type="button" about="v-fs:Find" property="rdfs:label"></button>
      </span>
    </div>
    <small class="advanced-toggle text-muted" about="v-fs:AdvancedSearchBundle" property="rdfs:label" style="border-bottom:1px dashed #707070; cursor:pointer;"></small>
    <div class="advanced-search hidden panel panel-default margin-md">
      <div class="panel-body bg-default">
        <em about="rdf:type" property="rdfs:label"></em>
        <div rel="rdf:type" data-template="v-ui:LabelTemplate"></div>
        <veda-control rel="rdf:type" data-type="link" data-query-prefix="'rdf:type'=='owl:Class' && 'rdfs:subClassOf'=='v-s:UserThing'" class="fulltext dropdown"></veda-control>
      </div>
    </div>
  </div>
</div>
<script>
  var find = container.siblings(".search-actions").find("#search-button.search-button").addClass("hidden");
  var customFind = $("#custom-search-button.search-button", template);
  customFind.click(function () {
    if ( $("input", template).val() ) {
      find.click();
    }
  });
  $("input", template).keydown(function (e) {
    if (e.which === 13 && this.value) {
      var value = this.value;
      individual.set("*", [value]);
      find.click();
    }
  });
  if (individual.advanced) {
    $(".advanced-search", template).removeClass("hidden");
  }
  $(".advanced-toggle", template).click(function (e) {
    e.preventDefault();
    individual.advanced = !individual.advanced;
    if (individual.advanced) {
      $(".advanced-search", template).removeClass("hidden");
    } else {
      $(".advanced-search", template).addClass("hidden");
    }
  });
  //# sourceURL=v-fs:FulltextBlankTemplate_post
</script>
  """ ;
.

v-fs:FulltextResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search result template"@en ;
  v-ui:template """
<table class="table table-bordered table-condensed">
  <thead class="result-header">
    <tr>
      <th width="1%"><input type="checkbox" class="toggle-select-all"></th>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th width="5%" class="orderby" data-orderby="rdf:type.rdfs:label"><span about="rdf:type" property="rdfs:label"></span></th>
      <th width="30%" class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
      <th width="5%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
      <th width="5%" class="orderby" data-orderby="v-s:creator"><span about="v-s:creator" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td width="1%"><input type="checkbox" class="toggle-select"></td>
      <td class="serial-number"></td>
      <td about="@"><a href="#/@" class="glyphicon glyphicon-search"></a></td>
      <td about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></td>
      <td about="@" property="rdfs:label"></td>
      <td about="@" property="v-s:created"></td>
      <td about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:MinimalSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Минимальный поиск"@ru ;
  rdfs:label "Minimal search"@en ;
  v-fs:searchBlank v-fs:MinimalSearchBlank ;
  v-fs:searchOnLoad true ;
  v-fs:loadAll true ;
.

v-fs:MinimalSearchBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType rdf:Property ;
.

v-fs:MinimalSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон отображения результатов минимального поиска"@ru ;
  rdfs:label "Minimal search result template"@en ;
  v-ui:template """
<table class="table table-condensed table-striped">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th>@</th>
      <th class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td class="serial-number"></td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td property="@"></td>
      <td about="@" property="rdfs:label"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

# ------------------------------------------------------------ УПРАВЛЕНИЕ ПРАВАМИ --

v-fs:AttributiveSearch_permission1
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-fs:AttributiveSearch ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate "true"^^xsd:boolean ;
  rdfs:label "C. Все пользователи. Класс v-fs:AttributiveSearch" ;
.
