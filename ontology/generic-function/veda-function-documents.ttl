@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix v-ft: <http://semantic-machines.com/veda/veda-function-tasks/> .

<http://semantic-machines.com/veda/veda-function-documents>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология функции 'Мои документы' системы Веда"@ru ;
  rdfs:label "Veda system function 'MyDocuments' ontology"@en ;
#  owl:versionInfo "0.2" ;
  v-s:loadPriority 9 ;
.

########## NEWS FUNCTION ###########

v-s:DocumentsBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Мои документы Blank"@ru ;
  rdfs:label "My documents Blank"@en ;
  v-fc:targetType v-s:Document ;
.

v-s:DocumentsSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Мои"@ru ;
  rdfs:label "My"@en ;
  v-fs:searchBlank v-s:DocumentsBlank ;
  v-fs:searchBlankTemplate v-s:DocumentsSearchBlankTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc" ;
  v-fs:searchOnLoad true ;
  v-fs:fulltextQuery "('v-s:creator'==='{veda.appointment.id}')" ;
  v-fs:applicableOperation v-ft:SendToIntroductionOperation ;
.

v-s:DocumentsSearchBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка  поиска Мои документы"@ru ;
  rdfs:label "My documents search blank template"@en ;
  v-ui:template """
<script>
  return veda.Backend.query(veda.ticket, "'rdf:type'==='v-fc:Create' && 'v-fc:hasBlank.isExists'=='true'").then(function (queryResult) {
    var queryResult = queryResult.result;
    var typesPromises = queryResult.map(function(createUri) {
      return new veda.IndividualModel(createUri).getPropertyChain("v-fc:hasBlank", "v-fc:targetType"); 
    });
    return Promise.all(typesPromises);
  }).then(function(types) {
    return types.reduce(function(acc, type) {
      if (type.length) {
        acc = acc.concat(type);
      }
      return acc;
    });

  }).then(function(dataSource) {
    individual.dataSource = dataSource;
    return true;
  });
  //# sourceURL=v-s:DocumentsSearchBlankTemplate_pre
</script>
<div>
  <div class="row">
    <div class="col-md-4">
      <em about="v-s:SearchForContentBundle" property="rdfs:label"></em>
      <veda-control property="*" data-type="string" placeholder="Введите запрос"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="rdf:type" property="rdfs:label"></em>
      <veda-control rel="rdf:type" data-single="true" data-type="select" data-source="{individual.dataSource}"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="v-s:created" property="rdfs:label"></em>
      <div property="v-s:created"></div>
      <veda-control data-type="date" property="v-s:created"></veda-control>
    </div>
  </div>  
</div>
  """ ;
.

v-s:DocumentsSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов поиска Мои документы"@ru ;
  rdfs:label "My documents search result template"@en ;
  v-ui:template """
<table class="table table-striped table-condensed">
  <thead class="result-header">
    <tr>
      <th width="1%"><input type="checkbox" class="toggle-select-all"></th>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th width="15%" class="orderby" data-orderby="rdf:type"><span about="rdf:type" property="rdfs:label"></span></th>
      <th width="60%" class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
      <th width="15%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
      <th width="7%" class="orderby" data-orderby="v-s:attachment"><span about="v-s:attachment" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td width="1%"><input type="checkbox" class="toggle-select"></td>
      <td class="serial-number"></td>
      <td><a href="#/@" class="glyphicon glyphicon-search"></a></td>
      <td about="@" property="rdf:type"></td>
      <td about="@" property="rdfs:label"></td>
      <td about="@" property="v-s:created"></td>
      <td about="@" property="v-s:attachment"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:AdvancedSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Реестр"@ru ;
  rdfs:label "Reestr"@en ;
  v-fs:searchBlank v-fs:AdvancedSearchBlank ;
  v-fs:searchBlankTemplate v-fs:AdvancedSearchTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
.

v-fs:AdvancedSearchBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType v-s:Document ;
.

v-fs:AdvancedSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search blank template"@en ;
  v-ui:template """
<script>
  return veda.Backend.query(veda.ticket, "'rdf:type'==='v-fc:Create' && 'v-fc:hasBlank.isExists'=='true'").then(function (queryResult) {
    var queryResult = queryResult.result;
    var typesPromises = queryResult.map(function(createUri) {
      return new veda.IndividualModel(createUri).getPropertyChain("v-fc:hasBlank", "v-fc:targetType"); 
    });
    return Promise.all(typesPromises);
  }).then(function(types) {
    return types.reduce(function(acc, type) {
      if (type.length) {
        acc = acc.concat(type);
      }
      return acc;
    });

  }).then(function(dataSource) {
    individual.dataSource = dataSource;
    return true;
  });
  //# sourceURL=v-fs:AdvancedSearchTemplate_pre
</script>
<div>
  <div class="row">
    <div class="col-md-4">
      <em about="v-s:SearchForContentBundle" property="rdfs:label"></em>
      <veda-control property="*" data-type="string" placeholder="Введите запрос"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="rdf:type" property="rdfs:label"></em>
      <veda-control rel="rdf:type" data-single="true" data-type="select" data-source="{individual.dataSource}"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="v-s:created" property="rdfs:label"></em>
      <div property="v-s:created"></div>
      <veda-control data-type="date" property="v-s:created"></veda-control>
    </div>
  </div>
</div>
  """ ;
.

v-s:SearchForContentBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Содержание"@ru ;
  rdfs:label "Content"@en ;
.

v-s:MultiFunctionalSearch
  rdf:type rdfs:Resource ;
  rdfs:label "Поиск документов "@ru ;
  rdfs:label "Documents search"@en ;
  v-ui:hasTemplate v-s:MultiFunctionalSearchTemplate ;
.

v-s:MultiFunctionalSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Многофункциональные шаблон для поиска"@ru ;
  rdfs:label "MultiFunctional search template"@en ;
  v-ui:template """
<script>
  var tabs = $("#box-tabs li", template);
  var loadIndicator = $("#load-indicator");
  tabs.click(function(){
    loadIndicator.show();
    var self = $(this);
    tabs.removeClass("active");
    self.addClass("active");
    $(".tabContainer", template).empty();
    var targetIndidivUri = self.find("a").attr("about");
    var targetIndidiv = new veda.IndividualModel(targetIndidivUri);
    targetIndidiv
      .present($(".tabContainer", template), new veda.IndividualModel("v-fs:AttributiveSearchTemplate"))
      .then(function(){
        loadIndicator.hide();
      });
  });
  $("#box-tabs li.active", template).click();
  //# sourceURL=v-s:MultiFunctionalSearchTemplate_pre
</script>
<div class="container sheet">
  <ul id="box-tabs" class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 id="currentTab" class="no-margin" about="@" property="rdfs:label"></h2></li>
    <li role="presentation" class="active"><a about="v-fs:FulltextSearch" property="rdfs:label"></a></li>
    <li role="presentation"><a about="v-fs:AdvancedSearch" property="rdfs:label"></a></li>
    <li role="presentation"><a about="v-s:DocumentsSearch" property="rdfs:label"></a></li>
  </ul>
  <div class="tabContainer"></div>
</div>
"""
.


#################### Operation ######################

v-ft:SendToIntroductionOperation
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Operation ;
  rdfs:label "Послать на ознакомление"@ru ;
  rdfs:label "Send to introduction"@en ;
  v-ui:hasModel v-ft:MakeDecisionOperationModel ;
  v-ui:hasTemplate v-ft:SendToIntroductionOperationTemplate ;
.

v-ft:SendToIntroductionOperationRights
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-ft:SendToIntroductionOperation ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate true ;
.
v-ft:SendToIntroductionOperationModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "Модель операции 'Групповое выполнение задач'"@ru ;
  rdfs:label "'Group complete operation' operation model"@en ;
  v-s:script """
this.fn = function (task_uri) {
  var group_decision_uri = veda.Util.getUri(this["v-wf:takenDecision"]);
  var group_decision = get_individual(veda.ticket, group_decision_uri);

  var task = get_individual(veda.ticket, task_uri);
  if ( veda.Util.hasValue(this, "v-wf:takenDecision") ) {
    task["v-wf:takenDecision"] = this["v-ft:groupDecision"];
    put_individual(veda.ticket, task);
  }
};
  """ ;
.

v-ft:SendToIntroductionOperationTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса v-ft:SendToIntroductionOperation"@ru ;
  rdfs:label "Template for v-ft:SendToIntroductionOperation class"@en ;
  v-ui:template """
<div class="container sheet">
  <div class="groupStartForm"></div>
</div>
<script>
  var startFormContainer = $(".groupStartForm", template);
  startFormContainer.empty();

  var startForm = new veda.IndividualModel();
  startForm["rdf:type"] = [new veda.IndividualModel("v-df:TaskRouteStartForm")];
  startForm["v-wf:forNet"] = [new veda.IndividualModel("s-wf:WrapUniversalNet")];
  startForm["v-wf:useTransformation"] = [new veda.IndividualModel("v-df:TaskRouteStartFormToNet")];
  startForm["v-wf:StartForm_setStatus"] = [true];
  startForm["v-wf:StartForm_canEdit"] = [false];
  return startForm.present(startFormContainer, "v-df:TaskRouteStartFormTemplate", "edit").then(function(startFormTemplate) {
    $(".action#send", startFormTemplate).off("click").click(function(){
      var savingPromises = individual["v-s:data"].map(function(doc) {
        startForm.clone().then(function(clonedStartForm){
          clonedStartForm["v-wf:hasStatusWorkflow"] = [new veda.IndividualModel("v-wf:ToBeSent")];
          clonedStartForm["v-wf:processedDocument"] = [doc];
          return clonedStartForm.save();
        })
      });
      return Promise.all(savingPromises).then(function () {
        var successMsg = new veda.IndividualModel("v-s:SuccessBundle").load();
        return successMsg.then(function (successMsg) {
          var notify = veda.Notify ? new veda.Notify() : function () {};
          notify("success", {name: successMsg});
        });
      }).catch(function (error) {
        console.log(error);
        var errorMsg = new veda.IndividualModel("v-s:ErrorBundle").load();
        return errorMsg.then(function (errorMsg) {
          var notify = veda.Notify ? new veda.Notify() : function () {};
          notify("danger", {name: errorMsg});
        });
      }).then(function () {
        startFormContainer.closest(".modal").modal("hide");
        var documentsSearch = new veda.IndividualModel("v-s:DocumentsSearch");
        documentsSearch.clearValue("v-fs:selected");
      });
    })
  });
  //# sourceURL=v-ft:SendToIntroductionOperationTemplate_post
</script>
  """ ;
.
