@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://semantic-machines.com/veda/veda-function-contacts>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология функции контакты"@ru ;
  rdfs:label "Contacts function ontology"@en ;
  v-s:loadPriority 9 ;
.
v-s:ContactsFunction
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Функция управления контактами"@ru ;
  rdfs:label "Contacts management function"@en ;
.

v-s:managedOrganization
  rdf:type owl:ObjectProperty ;
  rdfs:label "Организация"@ru ;
  rdfs:label "Organization"@en ;
  rdfs:domain v-s:ContactsFunction ;
  rdfs:range v-s:Organization ;
.

v-s:PSmanagedOrganization
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойства v-s:managedOrganization для класса v-s:ContactsFunction"@ru ;
  rdfs:label "v-s:managedOrganization property specification for v-s:ContactsFunction class"@en ;
  v-ui:forClass v-s:ContactsFunction ;
  v-ui:forProperty v-s:managedOrganization ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 1 ;
  v-ui:queryPrefix "('rdf:type' == 'v-s:Organization')"^^xsd:string ;
  v-ui:placeholder "Выберите организацию"@ru ;
  v-ui:placeholder "Choose organization"@en ;
.

v-s:Contacts
  rdf:type v-s:ContactsFunction ;
  rdfs:label "Контакты"@ru ;
  rdfs:label "Contacts"@en ;
  rdfs:comment "Организационная структура"@ru ;
  rdfs:comment "Organization chart"@en ;
  v-ui:hasTemplate v-s:ContactsTemplate ;
.

v-s:ContactsSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Поиск"@ru ;
  rdfs:label "Search"@en ;
  v-fs:searchBlank v-s:ContactsSearchRegistryBlank ;
  v-fs:searchBlankTemplate v-s:ContactsSearchBlankTemplate ;
  v-fs:searchResultTemplate v-s:ContactsSearchResultTemplate ;
  v-fs:sortOrder "'rdfs:label' asc";
.

v-s:ContactsSearchRegistryBlank
  a v-fc:Blank ;
  rdfs:label "Бланк поиска контактов"@ru ;
  rdfs:label "Contacts search blank"@en ;
  v-fc:targetType v-s:Person ;
.

v-s:ContactsTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон функции контакты"@ru ;
  rdfs:label "Contacts function template"@en ;
  v-ui:template """
<script>
  template.one("remove", function () {
    individual.activeTab = $("#contacts-tabs li.active a", template).attr("href");
  });
  individual.activeTab = individual.activeTab || "#structure";
  $("#contacts-tabs a[href='" + individual.activeTab + "']", template).parent().addClass("active");
  $("#contacts-tabs-content " + individual.activeTab, template).addClass("active");

  if ( !individual.hasValue("v-s:managedOrganization") && veda.appointment && typeof veda.appointment.getOrganization === "function") {
    individual["v-s:managedOrganization"] = [ veda.appointment.getOrganization() ];
  }
//# sourceURL=v-s:ContactsTemplate_pre
</script>
<div class="container sheet">
  <style>
    table {
      max-width: 250px;
    }
    td {
      white-space: nowrap;
    }
    /*div.value-row {
      margin-top: 5px;
    }*/
    div.value-row > div.item {
      padding: 5px;
    }
    div.item:hover {
      background-color: #fcf8e3;
    }
    div.item.warning {
      background-color: #faf2cc;
    }
  </style>
  <br>
  <ul class="nav nav-tabs nav-right" role="tablist" id="contacts-tabs">
    <li role="presentation" class="pull-left"><h2 class="no-margin" about="@" property="rdfs:label"></h2></li>
    <li role="presentation"><a href="#structure" role="tab" data-toggle="tab" about="v-s:Contacts" property="rdfs:comment"></a></li>
  </ul>
  <br>
  <div class="tab-content" id="contacts-tabs-content">
    <div role="tabpanel" class="tab-pane" id="structure">
      <veda-control data-type="link" rel="v-s:managedOrganization" class="fulltext dropdown"></veda-control>
      <br>
      <div>
        <div class="input-group">
          <veda-control id="searchText" property="*" data-type="string"></veda-control>
          <span class="input-group-btn">
            <button id="searchButton" class="btn btn-primary" type="button" about="v-fs:Find" property="rdfs:label"></button>
            <button id="resetButton" class="btn btn-warning" type="button" about="v-s:Reset" property="rdfs:label"></button>
          </span>
        </div>
        <br>
      </div>
      <br>
      <div>
        <div>
          <div>
            <div id="orgTree" class="table-responsive"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  var orgTree = $("#orgTree", template);
  
  var controlBlock = '<div id="controlButtons" style="float:right"><div class="btn create btn-xs btn-primary"><i class="glyphicon glyphicon-plus"></i></div><div class="btn edit btn-xs btn-default"><i class="glyphicon glyphicon-pencil"></i></div><div class="btn remove btn-xs btn-danger"><i class="glyphicon glyphicon-remove"></i></div></div>';

  var zoomIn = '<a href="#" id="zoomIn" class="glyphicon glyphicon-zoom-in margin-sm-h"></a>';  

  var controlButtons = "";
  var appointmentButtons = "";
  var departmentButtons = "";
  function generateDepartmentControls() {
    var buttons = [];
    var controls = "";
    var addDepartmentControl = '<button id="add-Department" class="btn btn-xs margin-sm-h btn-primary">Добавить отдел</button>';
    var addAppointmentControl = '<button id="add-Appointment" class="btn btn-xs margin-sm-h btn-info">Назначить сотрудника</button>';
    if (veda.appointment.id != 'cfg:AdministratorAppointment') {
      if (!veda.appointment['v-s:parentOrganization']) return "";
      if (veda.appointment['v-s:parentOrganization'][0].id == individual['v-s:managedOrganization'][0].id) {
        var _department =  new veda.IndividualModel("v-s:Department");
        var canCreateDepartment = _department.rights.hasValue("v-s:canCreate", true);
        if (canCreateDepartment) {
          buttons.push(addDepartmentControl);
        }

        var _appointment =  new veda.IndividualModel("v-s:Appointment");
        var canCreateAppointment = _appointment.rights.hasValue("v-s:canCreate", true);
        var _position =  new veda.IndividualModel("v-s:Position");
        var canCreatePosition = _position.rights.hasValue("v-s:canCreate", true);
        var _person =  new veda.IndividualModel("v-s:Person");
        var canCreatePerson = _person.rights.hasValue("v-s:canCreate", true);
        if (canCreateAppointment && canCreatePosition && canCreatePerson) {
          buttons.push(addAppointmentControl);
        }
      }
    } else {
      buttons.push(addDepartmentControl);
      buttons.push(addAppointmentControl);
    }
    if (buttons.length > 0) {
      controls = $('<div id="controlButtons" style="float:right"></div>');
      buttons.forEach(function(btn) {
        controls.append(btn);
      });
    }
    return controls; 
  }

  function generateAppointmentControls(targetAppointment){
    var controls = $('<div id="controlButtons" style="float:right"></div>');
    var delAppointmentControl = '<button id="delete-Appointment" class="btn btn-xs margin-sm-h btn-danger">Удалить назначение</button>';
    if (veda.appointment.id != 'cfg:AdministratorAppointment') {
      if (!veda.appointment['v-s:parentOrganization']) return "";
      if (veda.appointment['v-s:parentOrganization'][0].id == individual['v-s:managedOrganization'][0].id) {
        //var _appointment =  new veda.IndividualModel("v-s:Appointment");
        var _appointment =  new veda.IndividualModel(targetAppointment);
        var canDeleteAppointment = _appointment.rights.hasValue("v-s:canDelete", true);
        //console.log('canDeleteAppointment='+canDeleteAppointment);
        if (canDeleteAppointment) {
          controls.append(delAppointmentControl);
        }
      }
    } else {
      controls.append(delAppointmentControl);
    }
    return controls;
  }


  function initialStructure(){
    orgTree.empty();
    if (individual.hasValue('v-s:managedOrganization')) {
      departmentButtons = generateDepartmentControls();
      var org = individual['v-s:managedOrganization'][0];
      var tmpl = getTemplate(org);
      drawRow(org, orgTree, tmpl);
      $('.value-row a.expand', orgTree).click()
    }
  }
  function drawChilds(parentUri, rootElement, filteredItems){
    if (filteredItems) {
      orgTree.empty();
      rootElement.append('<div class="childs"></div>');
      childsContainer = rootElement.children('.childs');
      filteredItems.forEach(function (item) {
        var tmpl = getTemplate(item);
        drawRow(item, childsContainer, tmpl);
      });
    } else {
      var childsContainer = rootElement.children('.childs');
      if (childsContainer.length) {
        childsContainer.show();
      } else {
        rootElement.append('<div class="childs"></div>');
        childsContainer = rootElement.children('.childs');

        var childsUri = getChilds(new veda.IndividualModel(parentUri));
        childsUri.forEach(function(uri) {
          var child = new veda.IndividualModel(uri);
          var tmpl = getTemplate(child);
          drawRow(child, childsContainer, tmpl);
        })
      }
    }
  }

  function getChilds(parent, isPrefetch){
    var childsUries = [];
    if (parent.is('v-s:Appointment')) {
      return childsUries;
    }
    var parentUri = parent.id;
    var parentOrgUri = individual["v-s:managedOrganization"][0].id;
    var queryPattern = "'v-s:parentUnit'=='" + parentUri + "' && ";

    var queryDepartments = queryPattern + "'rdf:type'=='v-s:Department'";
    //отображение сначала должностей как корней, с аппоинтментами внутри 
    // var queryPosition = queryPattern + "'rdf:type'=='v-s:Position'";
    // var queryAppointment = "'rdf:type'=='v-s:Appointment' && 'v-s:occupation'=='"+parentUri+"'";
    // var queryStringArray = [queryOrganization, queryDepartments, queryOrgGroup, queryPosition, queryAppointment];

    //отображение аппоинтментов как кроней
    var queryAppointment = queryPattern + "'rdf:type'=='v-s:Appointment'";
    var queryStringArray = [];
    if (parent.is('v-s:Department')) {
      queryStringArray = [queryDepartments, queryAppointment];  
    } else if (parent.is('v-s:OrgGroup')) {
      queryStringArray = [queryAppointment];
    } else if (parent.is('v-s:Organization')) {
      var queryOrgGroup = queryPattern + "'rdf:type'=='v-s:OrgGroup'";
      var querySubsidiary = "'v-s:parentOrganization'=='"+parentOrgUri+"' && 'rdf:type'=='v-s:Subsidiary'";
      var queryOrganization = queryPattern + "'rdf:type'=='v-s:Organization'";
      queryStringArray = [queryOrganization, querySubsidiary, queryDepartments, queryOrgGroup, queryAppointment];
    }
    
    var sort = "'rdfs:label' desc";
    for (var i = 0; i< queryStringArray.length; i++) {
      var result = query({ticket: veda.ticket, query: queryStringArray[i], sort: sort}).result;
      childsUries = childsUries.concat(result);
      if (isPrefetch && childsUries.length > 0) {
        break;
      }
    }
    return childsUries;
    
  }

  function getTemplate(value, currentLvl){
    var icon = '';
    var expand = '';
    var textProperty = 'rdfs:label';
    if (value.is('v-s:Appointment')) {
      icon = 'fa-user-o';
    } else {
      var preCheckChilds = getChilds(value, true);
      if (preCheckChilds.length > 0) {
        expand = "<a href='#' class='expand glyphicon glyphicon-chevron-right'></a>";
      };
      if (value.is('v-s:Organization')) icon = 'fa-sitemap';
      if (value.is('v-s:Department') || value.is('v-s:OrgGroup')) {
        if (value.hasValue('v-s:title')) textProperty = 'v-s:title';
        icon = 'fa-folder-o';
      }
    }
    var iconSpan = "<span style='margin:0 5px;' class='fa fa-lg " + icon + "'></span>"
    var rowTmpl = "<div class='value-row margin-xs' style='padding-left:16px'><div class='item'>"+ expand + iconSpan +
      "<span about='@' property='" + textProperty + "' data-template='v-ui:LabelTemplate'></span></div></div>";
    return $(rowTmpl);
  }
  function drawRow(value, rootElement, template){
    // if (!value.hasValue('v-s:parentOrganization')) {
    //   value['v-s:parentOrganization'] = individual['v-s:managedOrganization'];
    //   value.save();
    // }
    template = value.present($("<div>"), template[0].outerHTML);
    rootElement.append(template);
  }

  template.on("click", "a.expand.glyphicon-chevron-right", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var row = self.closest('div.value-row');
    var uri = row.attr('resource');
    self.toggleClass("expanded glyphicon-chevron-right glyphicon-chevron-down");
    drawChilds(uri, row);
    return false;
  });

  template.on("click", "a.expanded.glyphicon-chevron-down", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    self.toggleClass("expanded glyphicon-chevron-right glyphicon-chevron-down");
    var row = self.closest('div.value-row');
    row.children('div.childs').hide();
    return false;
  });

  template.on("click", "a.glyphicon-zoom-in", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var row = self.closest('div.value-row');
    var uri = row.attr('resource');
    var obj = new veda.IndividualModel(uri);
    var person, tmpl;
    if (obj.is('v-s:Appointment')) {
      obj = obj['v-s:employee'][0];
      // tmpl = new veda.IndividualModel('v-s:PersonalInfoTemplate', 'view');
      tmpl = undefined;
      riot.route( ["#", obj.id].join("/") );
      return false;
    } else if (obj.is('v-s:Department')) {
      tmpl = new veda.IndividualModel('v-s:DepartmentTemplate', 'view');
    } else if (obj.is('v-s:Organization')) {
      tmpl = new veda.IndividualModel('v-s:OrganizationTemplate', 'view');
    }
    veda.Util.showModal(obj, tmpl);
    return false;
  });

  template.on("click", "div.value-row", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var item = self.children('.item');
    if (!item.hasClass('warning')) {
      $('.item.warning', template).removeClass('warning');
      $('#controlButtons', template).remove();
      $('#zoomIn', template).remove();
      item.addClass('warning');
      item.append(zoomIn);
      if (self.attr('typeof') == 'v-s:Appointment') {
        appointmentButtons = generateAppointmentControls(self.attr('resource'));
        item.append(appointmentButtons);
      } else {
        item.append(departmentButtons);
      }
    }
    return false;
  });

  template.on("click", "#add-Department", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var row = self.closest('div.value-row');
    var parentUri = row.attr('resource');

    var NewDepartment = new veda.IndividualModel();
    var _class = new veda.IndividualModel('v-s:Department');
    var tmpl = new veda.IndividualModel('v-s:DepartmentTemplate');
    NewDepartment['rdf:type'] = [_class];
    NewDepartment['v-s:parentUnit'] = [new veda.IndividualModel(parentUri)];
    NewDepartment['v-s:parentOrganization'] = individual['v-s:managedOrganization'];
    var modal = veda.Util.showModal(NewDepartment, tmpl, "edit");
    NewDepartment.one("afterSave", function () {
      modal.modal("hide").remove();
      row.find('.childs').remove();
      setTimeout(function(){
        drawChilds(parentUri, row)
      }, 500);
    });
    return false;
  });

  template.on("click", "#add-Appointment", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var row = self.closest('div.value-row');
    var parentUri = row.attr('resource');

    var NewAppointment = new veda.IndividualModel();
    var _class = new veda.IndividualModel('v-s:Appointment');
    var tmpl = new veda.IndividualModel('v-s:NewAppointmentTemplate');
    NewAppointment['rdf:type'] = [_class];
    NewAppointment['v-s:parentUnit'] = [new veda.IndividualModel(parentUri)];
    NewAppointment['v-s:parentOrganization'] = individual['v-s:managedOrganization'];

    var modal = veda.Util.showModal(NewAppointment, tmpl, "edit");
    NewAppointment.one("afterSave", function () {
      modal.modal("hide").remove();
      row.find('.childs').remove();
      setTimeout(function(){
        drawChilds(parentUri, row)
      }, 500);
    });
    return false;
  });

  template.on("click", "#delete-Appointment", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var self = $(this);
    var currentRow = self.closest('div.value-row');
    var parentRow = currentRow.parent().closest("[resource]");
    //var delUri = row.attr('resource');
    var warning = new veda.IndividualModel("v-s:AreYouSure")["rdfs:label"].join(" ");
    if ( !confirm(warning) ) { return; }
    currentRow.closest("[resource]").trigger('delete');
    parentRow.find('.childs').remove();
    setTimeout(function(){
      drawChilds(parentRow.attr('resource'), parentRow)
    }, 500);
    return false;
  });

  initialStructure();
  individual.on('v-s:managedOrganization', initialStructure);
  template.one('remove', function(){
    individual.off('v-s:managedOrganization', initialStructure);
  });

  $('#searchButton', template).click(function(){
    var searchText = $('#searchText input', template).val();
    if (!searchText) return;
    var sort = "'rdfs:label' desc";

    // var q = "('rdf:type'==='v-s:OrgGroup' || 'rdf:type'==='v-s:Department' || 'rdf:type'==='v-s:Organization' || 'rdf:type'==='v-s:Appointment') && 'rdfs:label'=='"+ searchText +"*'";
    //поиск с заполненным v-s:parentOrganization
    var q = "('rdf:type'==='v-s:OrgGroup' || 'rdf:type'==='v-s:Department' || 'rdf:type'==='v-s:Organization' || 'rdf:type'==='v-s:Appointment') && 'v-s:parentOrganization'=='"+ individual['v-s:managedOrganization'][0].id +"' && 'rdfs:label'=='"+ searchText +"*'";
    query({
      ticket: veda.ticket,
      query: q,
      sort: sort,
      async: true
    }).then(function (queryResult) {
      var unique = veda.Util.unique( queryResult.result );
      var items = [];
      unique.forEach(function (item) {
        var temp = new veda.IndividualModel(item);
        // if (temp.isSubUnitOf && temp.isSubUnitOf(individual['v-s:managedOrganization'][0])) {
        //   items.push(new veda.IndividualModel(item));
        // }
        //поиск с заполненным v-s:parentOrganization
        items.push(new veda.IndividualModel(item));
      });
      drawChilds(undefined, orgTree, items);
      return items;
    })
  })
  $('#resetButton', template).click(function(){
    $('#searchText input', template).val('');
    initialStructure();
  })
  //# sourceURL=v-s:ContactsTemplate_post
</script>
  """
.



v-s:ContactsSearchBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка поиска контактов"@ru ;
  rdfs:label "Contacts search blank template"@en ;
  v-ui:template """
<div class="row">
  <style>
    .input-group input {
      border-top-left-radius: 4px!important;
      border-bottom-left-radius: 4px!important;
    }
  </style>
  <div class="col-md-12">
    <div class="input-group">
      <veda-control property="*" data-type="string"></veda-control>
      <span class="input-group-btn">
        <button class="btn btn-primary custom-find" type="button" about="v-fs:Find" property="rdfs:label"></button>
      </span>
    </div>
    <br>
  </div>
</div>
<script>
  container.siblings("br").remove();
  var find = container.siblings(".search-actions").find(".search-button").addClass("hidden");
  var customFind = $(".custom-find", template);
  customFind.click(function () {
    find.click();
  });
  $("input", template).keydown(function (e) {
    if (e.which === 13) {
      var value = this.value;
      individual.set("*", [value]);
      find.click();
    }
  });
//# sourceURL=v-s:ContactsSearchBlankTemplate_post
</script>
  """ ;
.

v-s:ContactsSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов поиска для контактов"@ru ;
  rdfs:label "Contacts search result template"@en ;
  v-ui:template """
<table class="table table-condensed table-striped">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th class="orderby" data-orderby="v-s:lastName"><span about="v-s:lastName" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-s:firstName"><span about="v-s:firstName" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-s:middleName"><span about="v-s:middleName" property="rdfs:label"></span></th>
      <th><span about="v-s:occupation" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td class="serial-number"></td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td about="@" property="v-s:lastName"></td>
      <td about="@" property="v-s:firstName"></td>
      <td about="@" property="v-s:middleName"></td>
      <td about="@" rel="v-s:defaultAppointment"><span rel="v-s:occupation" data-template="v-ui:LabelTemplate"></span></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-s:OrganizationUnitTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения единицы организационной структуры"@ru ;
  rdfs:label "Organization unit template"@en ;
  v-ui:forClass v-s:OrganizationUnit ;
  v-ui:template """
<div class="container sheet">
  <h3><span about="@" property="rdfs:label"></span></h3>
  <span about="@" data-template="v-ui:RabbitHole" data-properties="v-s:parentUnit"></span>
  <hr>
  <div>
    <div class="-view edit search">
      <em about="rdfs:label" property="rdfs:label"></em>
      <div property="rdfs:label" class="view -edit -search"></div>
      <veda-control data-type="string" property="rdfs:label" class="-view edit search"></veda-control>
      <hr class="view -edit -search">
    </div>
    <em about="v-s:parentUnit" property="rdfs:label"></em>
    <div rel="v-s:parentUnit" class="view -edit -search" data-template="v-ui:LabelLinkTemplate"></div>
    <veda-control data-type="link" rel="v-s:parentUnit" class="-view edit search fulltext"></veda-control>
    <div class="row">
      <div class="col-sm-6">
        <em about="v-s:hasChief" property="rdfs:label"></em>
        <div rel="v-s:hasChief" class="view -edit search" data-template="v-ui:LabelTemplate"></div>
        <veda-control data-type="link" rel="v-s:hasChief" class="-view edit search fulltext"></veda-control>
      </div>
      <div class="col-sm-6">
        <em about="v-s:hasFunctionalChief" property="rdfs:label"></em>
        <div rel="v-s:hasFunctionalChief" class="view -edit search" data-template="v-ui:LabelTemplate"></div>
        <veda-control data-type="link" rel="v-s:hasFunctionalChief" class="-view edit search fulltext"></veda-control>
      </div>
    </div>
  </div>
  <br>
  <!-- BUTTONS -->
  <div class="actions">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="edit save cancel delete"></span>
  </div>
</div>
  """ ;
.

v-s:OrganizationUnitContentTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения единицы организационной структуры"@ru ;
  rdfs:label "Organization unit template"@en ;
  v-ui:forClass v-s:OrganizationUnit ;
  v-ui:template """
<script>
  var blank = new veda.IndividualModel("v-s:ContactsInUnitSearchRegistryBlank");
  blank.initBlank();
  if ( !blank.object.hasValue("v-s:parentUnit", individual) ) {
    blank.object["v-s:parentUnit"] = [ individual ];
    var search = new veda.IndividualModel("v-s:ContactsInUnitSearch");
    search["v-fs:searchResult"] = [];
  }
//# sourceURL=v-s:OrganizationUnitContentTemplate_pre
</script>
<div>
  <h4><span about="@" property="rdfs:label"></span></h4>
  <span about="@" data-template="v-ui:RabbitHole" data-properties="v-s:parentUnit"></span>
  <hr>
  <div about="v-s:ContactsInUnitSearch" data-template="v-fs:AttributiveSearchInlineTemplate"></div>
</div>
  """ ;
.

v-s:ContactsInUnitSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Поиск"@ru ;
  rdfs:label "Search"@en ;
  v-fs:searchBlank v-s:ContactsInUnitSearchRegistryBlank ;
  v-fs:searchResultTemplate v-s:ContactsInUnitSearchResultTemplate ;
  v-fs:sortOrder "'rdf:type.rdfs:label' desc" ;
  v-fs:searchOnLoad true ;
.

v-s:ContactsInUnitSearchRegistryBlank
  a v-fc:Blank ;
  rdfs:label "Бланк поиска контактов"@ru ;
  rdfs:label "Contacts search blank"@en ;
  v-fc:targetType v-s:Appointment ;
#  v-fc:targetType v-s:Position ;
  v-fc:targetType v-s:Department ;
  v-fc:targetType v-s:OrgGroup ;
.

#v-s:ContactsInUnitSearchResultTemplate
#  rdf:type v-ui:ClassTemplate ;
#  rdfs:label "Шаблон отображения результатов поиска для контактов"@ru ;
#  rdfs:label "Contacts search result template"@en ;
#  v-ui:template """
#<div>
#  <div class="result-container">
#    <script>
#      if ( individual.hasValue("rdf:type", "v-s:Appointment") ) {
#        template.attr("data-template", "v-s:AppointmentContactTemplate");
#      } else if ( individual.hasValue("rdf:type", "v-s:Position") ) {
#        template.attr("data-template", "v-s:PositionContactTemplate");
#      } else if ( individual.hasValue("rdf:type", "v-s:Department") || individual.hasValue("rdf:type", "v-s:OrgGroup") ) {
#        template.attr("data-template", "v-s:DepartmentContactTemplate");
#      }
#      //# sourceURL=v-s:ContactsInUnitSearchResultTemplate_inline
#    </script>
#    <span about="@"></span>
#  </div>
#</div>
#  """ ;
#.
v-s:ContactsInUnitSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов поиска для контактов"@ru ;
  rdfs:label "Contacts search result template"@en ;
  v-ui:template """
<div>
  <div class="result-container">
    <script>
      if ( individual.is("v-s:Appointment") ) {
        template.children().not(".app").remove();
      } else if ( individual.is("v-s:Department") || individual.is("v-s:OrgGroup") ) {
        template.children().not(".dep").remove();
      } else if ( individual.is("v-s:Organization") ) {
        template.children().not(".org").remove();
      }
    //# sourceURL=v-s:ContactsInUnitSearchResultTemplate
    </script>
    <div>
      <hr class="app dep org margin-md">
      <span style="width:20px" class="app fa fa-lg fa-user-o"></span>
      <span style="width:20px" class="dep fa fa-lg fa-folder-o"></span>
      <span style="width:20px" class="org fa fa-lg fa-sitemap"></span>
      <strong class="app" about="@" rel="v-s:employee">
        <span property="rdfs:label"></span>
      </strong>
      <span class="app" about="@" rel="v-s:occupation">
        <span property="rdfs:label"></span>
      </span>
      <span class="app" about="@" rel="v-s:employee">
        <span property="v-s:phone"></span>
      </span>
      <span class="app" about="@" rel="v-s:employee">
        <span rel="v-s:hasAccount">
          <a class="view -edit -search" about="@" property="v-s:mailbox"></a>
          <script>
            template.attr("href", "mailto:" + individual["v-s:mailbox"][0]);
          </script>
        </span>
      </span>
      <strong class="dep org" about="@" property="rdfs:label"></strong>
    </div>
  </div>
  <br>
</div>
  """ ;
.

v-s:AppointmentContactTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения контакта персоны"@ru ;
  rdfs:label "Person contact template"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:template """
<div class="horizontal-card horizontal-card-sm">
  <div class="thumbnail" about="@" rel="v-s:hasImage" data-template="v-ui:ImageTemplate"></div>
  <div class="description">
    <div about="@" rel="v-s:employee" class="header">
      <strong><span about="@" property="v-s:firstName"></span> <span about="@" property="v-s:lastName"></span></strong>
    </div>
    <hr class="margin-sm">
    <small rel="v-s:occupation" data-template="v-ui:LabelTemplate"></small>
  </div>
</div>
  """ ;
.
v-s:PositionContactTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения контакта персоны"@ru ;
  rdfs:label "Person contact template"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:template """
<div class="horizontal-card horizontal-card-sm">
  <div class="thumbnail" about="@" rel="v-s:hasImage" data-template="v-ui:ImageTemplate"></div>
  <div class="description">
    <div class="header">
      <strong about="@" property="rdfs:label"></strong>
    </div>
  </div>
</div>
  """ ;
.
v-s:DepartmentContactTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения единицы организационной структуры"@ru ;
  rdfs:label "Organization unit template"@en ;
  v-ui:forClass v-s:Department ;
  v-ui:template """
<div class="horizontal-card horizontal-card-sm">
  <div class="thumbnail">
    <i class="fa fa-folder-open-o fa-2x"></i>
  </div>
  <div class="description">
    <div class="header">
      <strong about="@" property="rdfs:label"></strong>
    </div>
  </div>
</div>
  """ ;
.
